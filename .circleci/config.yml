version: '2.1'
orbs:
  docker: circleci/docker@2.0.1
  slack: circleci/slack@4.6.1
jobs:
  build-and-push:
    executor: docker/docker
    resource_class: small
    steps:
      - setup_remote_docker
      - run:
          name: Temporarily whitelist remote docker machine IP address on Vultr
          command: |
            PUBLIC_IP_ADDRESS=$(ssh remote-docker curl -s http://checkip.amazonaws.com)
            echo $PUBLIC_IP_ADDRESS
            curl -s "https://api.vultr.com/v2/firewalls/$VULTR_FIREWALL_GROUP_ID/rules" \
              -X POST \
              -H "Authorization: Bearer $VULTR_API_KEY" \
              -H "Content-Type: application/json" \
              --data '{
                "ip_type" : "v4",
                "protocol" : "tcp",
                "port" : "'"$DOCKER_REGISTRY_PORT"'",
                "subnet" : "'"$PUBLIC_IP_ADDRESS"'",
                "subnet_size" : 32,
                "source" : "",
                "notes" : "CircleCI deployment"
              }' | jq '.firewall_rule.id' >> /tmp/firewall_id_1.txt
              cat /tmp/firewall_id_1.txt
            curl -s "https://api.vultr.com/v2/firewalls/$VULTR_FIREWALL_GROUP_ID/rules" \
              -X POST \
              -H "Authorization: Bearer $VULTR_API_KEY" \
              -H "Content-Type: application/json" \
              --data '{
                "ip_type" : "v4",
                "protocol" : "tcp",
                "port" : "'"$NPM_REGISTRY_PORT"'",
                "subnet" : "'"$PUBLIC_IP_ADDRESS"'",
                "subnet_size" : 32,
                "source" : "",
                "notes" : "CircleCI deployment"
              }' | jq '.firewall_rule.id' >> /tmp/firewall_id_2.txt
              cat /tmp/firewall_id_2.txt
      - run:
          name: Update docker machine to accept insecure private registry
          command: |
            cat \<< EOF | ssh remote-docker "sudo tee -a /etc/docker/daemon.json"
            {
            "insecure-registries": ["$DOCKER_REGISTRY"]
            }
            EOF
            ssh remote-docker "sudo service docker restart"
            docker system info
      - run:
          name: Write .npmrc on docker machine
          command: ssh remote-docker "echo $NPMRC > ~/project/.npmrc"
      - checkout
      - docker/build:
          registry: $DOCKER_REGISTRY
          image: tg-price-alerts
          tag: latest
      - docker/push:
          registry: $DOCKER_REGISTRY
          digest-path: /tmp/digest.txt
          image: tg-price-alerts
          tag: latest
      - run:
          name: Undo whitelist process
          command: |
            FIREWALL_ID=`cat /tmp/firewall_id_1.txt`
            curl "https://api.vultr.com/v2/firewalls/$VULTR_FIREWALL_GROUP_ID/rules/$FIREWALL_ID" \
              -X DELETE \
              -H "Authorization: Bearer $VULTR_API_KEY"
            FIREWALL_ID=`cat /tmp/firewall_id_2.txt`
            curl "https://api.vultr.com/v2/firewalls/$VULTR_FIREWALL_GROUP_ID/rules/$FIREWALL_ID" \
              -X DELETE \
              -H "Authorization: Bearer $VULTR_API_KEY"
          when: always
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
workflows:
  version: 2
  commit:
    jobs:
      - build-and-push:
          context:
            - vultr-firewall
            - registries
            - slack-notifier
#          filters:
#            branches:
#              only:
#                - master
